/**
 * Based on
 *
 *  - reset.css 2.0 by Eric Meyer
      (public domain)
 *    http://meyerweb.com/eric/tools/css/reset/
 *
 *  - normalize.css 8.0.1 by Nicolas Gallagher and Jonathan Neal
 *    (licensed under MIT)
 *    https://github.com/necolas/normalize.css
 *
 *  - Reboot from Bootstrap 4.5.3
 *    (licensed under MIT)
 *    https://github.com/twbs/bootstrap
 */
/**
 * IE10+ doesn't honor `<meta name="viewport">` in some cases
 */
/**
 * general reset
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video, main {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/**
 * HTML5 display-role reset for older browsers
 */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section,
main, summary {
  display: block;
}

/**
 * inherit box model for all elements
 */
*,
*::before,
*::after {
  box-sizing: inherit;
}

/**
 * html root rules
 * 1. set border-box for inheritance
 * 2. avoid 300ms click delay on touch devices that support the `touch-action`
 *    CSS property
 * 3. Prevent adjustments of font size after orientation changes in IE, on
 *    Windows Phone and iOS.
 * 4. Setting @viewport causes scrollbars to overlap content in IE11 and Edge,
 *    so we force a non-overlapping, non-auto-hiding scrollbar to counteract.
 * 5. Change the default tap highlight to be completely transparent in iOS.
 */
html {
  /* 1 */
  box-sizing: border-box;
  /* 2 */
  touch-action: manipulation;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  /* 4 */
  -ms-overflow-style: scrollbar;
  /* 5 */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

/**
 * body rules
 * 1. reset line-height to 1
 * 2. set base font-family to sans-serif
 * 3. Set an explicit initial text-align value so that we can later use the
 *    `inherit` value on things like `<th>` elements.
 */
body {
  /* 1 */
  line-height: 1;
  /* 2 */
  font-family: sans-serif;
  /* 3 */
  text-align: left;
}

/**
 * Future-proof rule: in browsers that support :focus-visible, suppress the focus outline
 * on elements that programmatically receive focus but wouldn't normally show a visible
 * focus outline. In general, this would mean that the outline is only applied if the
 * interaction that led to the element receiving programmatic focus was a keyboard interaction,
 * or the browser has somehow determined that the user is primarily a keyboard user and/or
 * wants focus outlines to always be presented.
 *
 * See https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible
 * and https://developer.paciellogroup.com/blog/2018/03/focus-visible-and-backwards-compatibility/
 */
[tabindex="-1"]:focus:not(:focus-visible) {
  outline: 0 !important;
}

/**
 * Lists
 */
ol, ul {
  list-style: none;
}

/**
 * Quotes
 */
blockquote, q {
  quotes: none;
}

blockquote::before,
blockquote::after,
q::before,
q::after {
  content: "";
  content: none;
}

/**
 * Tables
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption {
  caption-side: bottom;
}

/**
 * Table Headers
 * 1. Matches default `<td>` alignment by inheriting from the `<body>`, or the
 *    closest parent with a set `text-align`.
 * 2. Fix alignment for Safari
 */
th {
  /* 1 */
  text-align: inherit;
  /* 2 */
  text-align: -webkit-match-parent;
}

/**
 * Horizontal Lines
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  /* 1 */
  box-sizing: content-box;
  height: 0;
  /* 2 */
  overflow: visible;
}

/**
 * Preformatted Text
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Don't allow content to break outside
 * 3. We have @viewport set which causes scrollbars to overlap content in IE11
 *    and Edge, so we force a non-overlapping, non-auto-hiding scrollbar to
 *    counteract.
 */
pre,
code,
kbd,
samp {
  /* 1 */
  font-family: monospace, monospace;
}

pre {
  /* 2 */
  overflow: auto;
  /* 3 */
  -ms-overflow-style: scrollbar;
}

/**
 * Links
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  /* 1 */
  background-color: transparent;
  /* 2 */
  -webkit-text-decoration-skip: objects;
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 * 3. Add explicit cursor to indicate changed behavior.
 * 4. Prevent the text-decoration to be skipped.
 */
abbr[title] {
  /* 1 */
  border-bottom: 0;
  /* 2 */
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 3 */
  cursor: help;
  /* 4 */
  -webkit-text-decoration-skip-ink: none;
          text-decoration-skip-ink: none;
}

address {
  font-style: normal;
  line-height: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/**
 * Prevent `em` being affected from global reset
 */
em {
  font-style: italic;
}

/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/**
 * Hide SVG overflow in IE
 */
svg:not(:root) {
  overflow: hidden;
}

/**
 * Remove the default `border-radius` that macOS Chrome adds.
 * Details at https://github.com/twbs/bootstrap/issues/24093
 */
button {
  border-radius: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 * Credit: https://github.com/suitcss/base/
 */
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

/**
 * form element resets
 * 1. Remove the margin in Firefox and Safari
 * 2. inherit font rules
 */
input,
button,
select,
optgroup,
textarea {
  /* 1 */
  margin: 0;
  /* 2 */
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=reset],
[type=submit],
[type=button] {
  /* 2 */
  -webkit-appearance: button;
}

/**
 * Remove the default appearance of temporal inputs to avoid a Mobile Safari
 * bug where setting a custom line-height prevents text from being vertically
 * centered within the input.
 * See https://bugs.webkit.org/show_bug.cgi?id=139848
 * and https://github.com/twbs/bootstrap/issues/11266
 */
input[type=date],
input[type=time],
input[type=datetime-local],
input[type=month] {
  -webkit-appearance: listbox;
}

/**
 * 1. Remove the default vertical scrollbar in IE.
 * 2. Textareas should really only resize vertically so they don't break their
 *    (horizontal) containers.
 */
textarea {
  overflow: auto;
  resize: vertical;
}

/**
 * Show the overflow in IE.
 */
button,
input {
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 */
button,
select {
  text-transform: none;
}

/**
 * Set the cursor for non-`<button>` buttons
 * Details at https://github.com/twbs/bootstrap/pull/30562
 */
[role=button] {
  cursor: pointer;
}

/**
 * Remove the inheritance of word-wrap in Safari.
 * See https://github.com/twbs/bootstrap/issues/24990
 */
select {
  word-wrap: normal;
}

/**
 * Remove inner border and padding from Firefox, but don't restore the outline
 * like Normalize.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * 1. Add the correct box sizing in IE 10-
 * 2. Remove the padding in IE 10-
 */
input[type=radio],
input[type=checkbox] {
  /* 1 */
  box-sizing: border-box;
  /* 2 */
  padding: 0;
}

/**
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 * Credit: https://github.com/suitcss/base
 */
[tabindex="-1"]:focus {
  outline: 0 !important;
}

/**
 * Browsers set a default `min-width: min-content` on fieldsets,
 * unlike e.g. `<div>`s, which have `min-width: 0` by default.
 * So we reset that to ensure fieldsets behave more like a standard block element.
 * See https://github.com/twbs/bootstrap/issues/12359
 * and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
 */
fieldset {
  min-width: 0;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Set display to block for all browsers
 */
legend {
  /* 1 */
  max-width: 100%;
  white-space: normal;
  /* 2 */
  color: inherit;
  /* 3 */
  display: block;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * 1. Remove the default vertical scrollbar in IE 10+.
 * 2. Textareas should really only resize vertically so they don't break their
 *    (horizontal) containers.
 */
textarea {
  /* 1 */
  overflow: auto;
  /* 2 */
  resize: vertical;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  /* 1 */
  box-sizing: border-box;
  /* 2 */
  padding: 0;
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  /* 1 */
  -webkit-appearance: textfield;
  /* 2 */
  outline-offset: -2px;
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  /* 1 */
  -webkit-appearance: button;
  /* 2 */
  font: inherit;
}

/**
 * Correct element display for output
 */
output {
  display: inline-block;
}

/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Always hide an element with the `hidden` HTML attribute (from PureCSS).
 * Needed for proper display in IE 10-.
 */
[hidden] {
  display: none;
}

/**
 * adds resets for buttons that are not covered by reset-and-normalize base
 */
[role=button],
input[type=button],
input[type=reset],
input[type=submit],
button {
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  color: inherit;
  text-align: inherit;
  background: none;
  -webkit-appearance: button;
     -moz-appearance: button;
          appearance: button;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
[role=button]:not(:disabled),
input[type=button]:not(:disabled),
input[type=reset]:not(:disabled),
input[type=submit]:not(:disabled),
button:not(:disabled) {
  cursor: pointer;
}
[role=button]:-moz-focusring,
input[type=button]:-moz-focusring,
input[type=reset]:-moz-focusring,
input[type=submit]:-moz-focusring,
button:-moz-focusring {
  outline: none;
}
[role=button]:focus,
input[type=button]:focus,
input[type=reset]:focus,
input[type=submit]:focus,
button:focus {
  outline: none;
}

/**
 * adds resets for links that are not covered by reset-and-normalize base
 */
a {
  color: inherit;
  text-decoration: none;
}
a:-moz-focusring {
  outline: none;
}
a:focus {
  outline: none;
}

/**
 * Swiper 8.4.6
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2023 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: January 17, 2023
 */
@font-face {
  font-family: "swiper-icons";
  src: url("data:application/font-woff;charset=utf-8;base64, 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") format("woff");
  font-weight: 400;
  font-style: normal;
}
:root {
  --swiper-theme-color: #007aff;
}

.swiper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1;
}

.swiper-vertical > .swiper-wrapper {
  flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box;
}

.swiper-android .swiper-slide,
.swiper-wrapper {
  transform: translate3d(0px, 0, 0);
}

.swiper-pointer-events {
  touch-action: pan-y;
}
.swiper-pointer-events.swiper-vertical {
  touch-action: pan-x;
}

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

/* Auto Height */
.swiper-autoheight,
.swiper-autoheight .swiper-slide {
  height: auto;
}
.swiper-autoheight .swiper-wrapper {
  align-items: flex-start;
  transition-property: transform, height;
}

.swiper-backface-hidden .swiper-slide {
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

/* 3D Effects */
.swiper-3d, .swiper-3d.swiper-css-mode .swiper-wrapper {
  perspective: 1200px;
}
.swiper-3d .swiper-wrapper,
.swiper-3d .swiper-slide,
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom,
.swiper-3d .swiper-cube-shadow {
  transform-style: preserve-3d;
}
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}
.swiper-3d .swiper-slide-shadow {
  background: rgba(0, 0, 0, 0.15);
}
.swiper-3d .swiper-slide-shadow-left {
  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-right {
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-top {
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-bottom {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

/* CSS Mode */
.swiper-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none; /* For Firefox */
  -ms-overflow-style: none; /* For Internet Explorer and Edge */
}
.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}
.swiper-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}

.swiper-horizontal.swiper-css-mode > .swiper-wrapper {
  scroll-snap-type: x mandatory;
}

.swiper-vertical.swiper-css-mode > .swiper-wrapper {
  scroll-snap-type: y mandatory;
}

.swiper-centered > .swiper-wrapper::before {
  content: "";
  flex-shrink: 0;
  order: 9999;
}
.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-start: var(--swiper-centered-offset-before);
          margin-inline-start: var(--swiper-centered-offset-before);
}
.swiper-centered.swiper-horizontal > .swiper-wrapper::before {
  height: 100%;
  width: var(--swiper-centered-offset-after);
}
.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-before: var(--swiper-centered-offset-before);
          margin-block-start: var(--swiper-centered-offset-before);
}
.swiper-centered.swiper-vertical > .swiper-wrapper::before {
  width: 100%;
  height: var(--swiper-centered-offset-after);
}
.swiper-centered > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: center center;
  scroll-snap-stop: always;
}

:root {
  /*
  --swiper-pagination-color: var(--swiper-theme-color);
  --swiper-pagination-bullet-size: 8px;
  --swiper-pagination-bullet-width: 8px;
  --swiper-pagination-bullet-height: 8px;
  --swiper-pagination-bullet-inactive-color: #000;
  --swiper-pagination-bullet-inactive-opacity: 0.2;
  --swiper-pagination-bullet-opacity: 1;
  --swiper-pagination-bullet-horizontal-gap: 4px;
  --swiper-pagination-bullet-vertical-gap: 6px;
  */
}

.swiper-pagination {
  position: absolute;
  text-align: center;
  transition: 300ms opacity;
  transform: translate3d(0, 0, 0);
  z-index: 10;
}
.swiper-pagination.swiper-pagination-hidden {
  opacity: 0;
}
.swiper-pagination-disabled > .swiper-pagination, .swiper-pagination.swiper-pagination-disabled {
  display: none !important;
}

/* Common Styles */
.swiper-pagination-fraction,
.swiper-pagination-custom,
.swiper-horizontal > .swiper-pagination-bullets,
.swiper-pagination-bullets.swiper-pagination-horizontal {
  bottom: 10px;
  left: 0;
  width: 100%;
}

/* Bullets */
.swiper-pagination-bullets-dynamic {
  overflow: hidden;
  font-size: 0;
}
.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  transform: scale(0.33);
  position: relative;
}
.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active {
  transform: scale(1);
}
.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main {
  transform: scale(1);
}
.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev {
  transform: scale(0.66);
}
.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev {
  transform: scale(0.33);
}
.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next {
  transform: scale(0.66);
}
.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next {
  transform: scale(0.33);
}

.swiper-pagination-bullet {
  width: var(--swiper-pagination-bullet-width, var(--swiper-pagination-bullet-size, 8px));
  height: var(--swiper-pagination-bullet-height, var(--swiper-pagination-bullet-size, 8px));
  display: inline-block;
  border-radius: 50%;
  background: var(--swiper-pagination-bullet-inactive-color, #000);
  opacity: var(--swiper-pagination-bullet-inactive-opacity, 0.2);
}
button.swiper-pagination-bullet {
  border: none;
  margin: 0;
  padding: 0;
  box-shadow: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.swiper-pagination-clickable .swiper-pagination-bullet {
  cursor: pointer;
}
.swiper-pagination-bullet:only-child {
  display: none !important;
}

.swiper-pagination-bullet-active {
  opacity: var(--swiper-pagination-bullet-opacity, 1);
  background: var(--swiper-pagination-color, var(--swiper-theme-color));
}

.swiper-vertical > .swiper-pagination-bullets,
.swiper-pagination-vertical.swiper-pagination-bullets {
  right: 10px;
  top: 50%;
  transform: translate3d(0px, -50%, 0);
}
.swiper-vertical > .swiper-pagination-bullets .swiper-pagination-bullet,
.swiper-pagination-vertical.swiper-pagination-bullets .swiper-pagination-bullet {
  margin: var(--swiper-pagination-bullet-vertical-gap, 6px) 0;
  display: block;
}
.swiper-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic,
.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {
  top: 50%;
  transform: translateY(-50%);
  width: 8px;
}
.swiper-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,
.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  display: inline-block;
  transition: 200ms transform, 200ms top;
}

.swiper-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet,
.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet {
  margin: 0 var(--swiper-pagination-bullet-horizontal-gap, 4px);
}
.swiper-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic,
.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
}
.swiper-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,
.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  transition: 200ms transform, 200ms left;
}

.swiper-horizontal.swiper-rtl > .swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  transition: 200ms transform, 200ms right;
}

/* Progress */
.swiper-pagination-progressbar {
  background: rgba(0, 0, 0, 0.25);
  position: absolute;
}
.swiper-pagination-progressbar .swiper-pagination-progressbar-fill {
  background: var(--swiper-pagination-color, var(--swiper-theme-color));
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  transform: scale(0);
  transform-origin: left top;
}
.swiper-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill {
  transform-origin: right top;
}
.swiper-horizontal > .swiper-pagination-progressbar, .swiper-pagination-progressbar.swiper-pagination-horizontal, .swiper-vertical > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite, .swiper-pagination-progressbar.swiper-pagination-vertical.swiper-pagination-progressbar-opposite {
  width: 100%;
  height: 4px;
  left: 0;
  top: 0;
}
.swiper-vertical > .swiper-pagination-progressbar, .swiper-pagination-progressbar.swiper-pagination-vertical, .swiper-horizontal > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite, .swiper-pagination-progressbar.swiper-pagination-horizontal.swiper-pagination-progressbar-opposite {
  width: 4px;
  height: 100%;
  left: 0;
  top: 0;
}

.swiper-pagination-lock {
  display: none;
}

@font-face {
  font-family: "Lato";
  src: url("../assets/fonts/Lato-Black.woff") format("woff");
  font-weight: 900;
  font-display: swap;
}
@font-face {
  font-family: "Lato";
  src: url("../assets/fonts/Lato-Bold.woff") format("woff");
  font-weight: 700;
  font-display: swap;
}
@font-face {
  font-family: "Lato";
  src: url("../assets/fonts/Lato-Regular.woff") format("woff");
  font-weight: 400;
  font-display: swap;
}
@font-face {
  font-family: "Akrobat";
  src: url("../assets/fonts/Akrobat-Black.woff") format("woff");
  font-weight: 900;
  font-display: swap;
}
@font-face {
  font-family: "Akrobat";
  src: url("../assets/fonts/Akrobat-SemiBold.woff") format("woff");
  font-weight: 600;
  font-display: swap;
}
@font-face {
  font-family: "Akrobat";
  src: url("../assets/fonts/Akrobat-Bold.woff") format("woff");
  font-weight: 700;
  font-display: swap;
}
.text-heading {
  font-family: Akrobat;
  font-weight: 600;
  line-height: 100%;
  text-transform: uppercase;
  color: #5E5D79;
}
.text-heading--1 {
  font-size: 132px;
}
@media (max-width: 1279px) {
  .text-heading--1 {
    font-size: 100px;
  }
}
@media (max-width: 767px) {
  .text-heading--1 {
    font-size: 60px;
  }
}
.text-heading--2 {
  font-size: 60px;
}
.text-heading--3 {
  font-size: 18px;
  line-height: 22px;
  letter-spacing: 0.2em;
}

.text-body {
  font-weight: 400;
  font-size: 14px;
  line-height: 150%;
  letter-spacing: 0.02em;
  color: rgba(94, 93, 121, 0.8);
}
.text-body--solid {
  color: #5E5D79;
}
.text-body--16 {
  font-size: 16px;
}
.text-body--18 {
  font-size: 18px;
}

html {
  scroll-behavior: smooth;
}

body {
  background: #E7E8ED;
  font-family: Lato;
}

.container {
  margin: 0 auto;
  width: 1180px;
}
@media (max-width: 1279px) {
  .container {
    max-width: 708px;
    width: auto;
  }
}
@media (max-width: 767px) {
  .container {
    margin: 0 15px;
  }
}

.row {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  -moz-column-gap: 30px;
       column-gap: 30px;
}
@media (max-width: 767px) {
  .row {
    -moz-column-gap: unset;
         column-gap: unset;
  }
}

.offset-0 {
  grid-column-start: 1;
}

.col-1 {
  grid-column-end: span 1;
}

.offset-1 {
  grid-column-start: 2;
}

.col-2 {
  grid-column-end: span 2;
}

.offset-2 {
  grid-column-start: 3;
}

.col-3 {
  grid-column-end: span 3;
}

.offset-3 {
  grid-column-start: 4;
}

.col-4 {
  grid-column-end: span 4;
}

.offset-4 {
  grid-column-start: 5;
}

.col-5 {
  grid-column-end: span 5;
}

.offset-5 {
  grid-column-start: 6;
}

.col-6 {
  grid-column-end: span 6;
}

.offset-6 {
  grid-column-start: 7;
}

.col-7 {
  grid-column-end: span 7;
}

.offset-7 {
  grid-column-start: 8;
}

.col-8 {
  grid-column-end: span 8;
}

.offset-8 {
  grid-column-start: 9;
}

.col-9 {
  grid-column-end: span 9;
}

.offset-9 {
  grid-column-start: 10;
}

.col-10 {
  grid-column-end: span 10;
}

.offset-10 {
  grid-column-start: 11;
}

.col-11 {
  grid-column-end: span 11;
}

.offset-11 {
  grid-column-start: 12;
}

.col-12 {
  grid-column-end: span 12;
}

.offset-12 {
  grid-column-start: 13;
}

@media (min-width: 576px) {
  .offset-sm-0 {
    grid-column-start: 1;
  }
}
@media (min-width: 576px) {
  .col-sm-1 {
    grid-column-end: span 1;
  }
  .offset-sm-1 {
    grid-column-start: 2;
  }
}
@media (min-width: 576px) {
  .col-sm-2 {
    grid-column-end: span 2;
  }
  .offset-sm-2 {
    grid-column-start: 3;
  }
}
@media (min-width: 576px) {
  .col-sm-3 {
    grid-column-end: span 3;
  }
  .offset-sm-3 {
    grid-column-start: 4;
  }
}
@media (min-width: 576px) {
  .col-sm-4 {
    grid-column-end: span 4;
  }
  .offset-sm-4 {
    grid-column-start: 5;
  }
}
@media (min-width: 576px) {
  .col-sm-5 {
    grid-column-end: span 5;
  }
  .offset-sm-5 {
    grid-column-start: 6;
  }
}
@media (min-width: 576px) {
  .col-sm-6 {
    grid-column-end: span 6;
  }
  .offset-sm-6 {
    grid-column-start: 7;
  }
}
@media (min-width: 576px) {
  .col-sm-7 {
    grid-column-end: span 7;
  }
  .offset-sm-7 {
    grid-column-start: 8;
  }
}
@media (min-width: 576px) {
  .col-sm-8 {
    grid-column-end: span 8;
  }
  .offset-sm-8 {
    grid-column-start: 9;
  }
}
@media (min-width: 576px) {
  .col-sm-9 {
    grid-column-end: span 9;
  }
  .offset-sm-9 {
    grid-column-start: 10;
  }
}
@media (min-width: 576px) {
  .col-sm-10 {
    grid-column-end: span 10;
  }
  .offset-sm-10 {
    grid-column-start: 11;
  }
}
@media (min-width: 576px) {
  .col-sm-11 {
    grid-column-end: span 11;
  }
  .offset-sm-11 {
    grid-column-start: 12;
  }
}
@media (min-width: 576px) {
  .col-sm-12 {
    grid-column-end: span 12;
  }
  .offset-sm-12 {
    grid-column-start: 13;
  }
}
@media (min-width: 768px) {
  .offset-md-0 {
    grid-column-start: 1;
  }
}
@media (min-width: 768px) {
  .col-md-1 {
    grid-column-end: span 1;
  }
  .offset-md-1 {
    grid-column-start: 2;
  }
}
@media (min-width: 768px) {
  .col-md-2 {
    grid-column-end: span 2;
  }
  .offset-md-2 {
    grid-column-start: 3;
  }
}
@media (min-width: 768px) {
  .col-md-3 {
    grid-column-end: span 3;
  }
  .offset-md-3 {
    grid-column-start: 4;
  }
}
@media (min-width: 768px) {
  .col-md-4 {
    grid-column-end: span 4;
  }
  .offset-md-4 {
    grid-column-start: 5;
  }
}
@media (min-width: 768px) {
  .col-md-5 {
    grid-column-end: span 5;
  }
  .offset-md-5 {
    grid-column-start: 6;
  }
}
@media (min-width: 768px) {
  .col-md-6 {
    grid-column-end: span 6;
  }
  .offset-md-6 {
    grid-column-start: 7;
  }
}
@media (min-width: 768px) {
  .col-md-7 {
    grid-column-end: span 7;
  }
  .offset-md-7 {
    grid-column-start: 8;
  }
}
@media (min-width: 768px) {
  .col-md-8 {
    grid-column-end: span 8;
  }
  .offset-md-8 {
    grid-column-start: 9;
  }
}
@media (min-width: 768px) {
  .col-md-9 {
    grid-column-end: span 9;
  }
  .offset-md-9 {
    grid-column-start: 10;
  }
}
@media (min-width: 768px) {
  .col-md-10 {
    grid-column-end: span 10;
  }
  .offset-md-10 {
    grid-column-start: 11;
  }
}
@media (min-width: 768px) {
  .col-md-11 {
    grid-column-end: span 11;
  }
  .offset-md-11 {
    grid-column-start: 12;
  }
}
@media (min-width: 768px) {
  .col-md-12 {
    grid-column-end: span 12;
  }
  .offset-md-12 {
    grid-column-start: 13;
  }
}
@media (min-width: 1024px) {
  .offset-lg-0 {
    grid-column-start: 1;
  }
}
@media (min-width: 1024px) {
  .col-lg-1 {
    grid-column-end: span 1;
  }
  .offset-lg-1 {
    grid-column-start: 2;
  }
}
@media (min-width: 1024px) {
  .col-lg-2 {
    grid-column-end: span 2;
  }
  .offset-lg-2 {
    grid-column-start: 3;
  }
}
@media (min-width: 1024px) {
  .col-lg-3 {
    grid-column-end: span 3;
  }
  .offset-lg-3 {
    grid-column-start: 4;
  }
}
@media (min-width: 1024px) {
  .col-lg-4 {
    grid-column-end: span 4;
  }
  .offset-lg-4 {
    grid-column-start: 5;
  }
}
@media (min-width: 1024px) {
  .col-lg-5 {
    grid-column-end: span 5;
  }
  .offset-lg-5 {
    grid-column-start: 6;
  }
}
@media (min-width: 1024px) {
  .col-lg-6 {
    grid-column-end: span 6;
  }
  .offset-lg-6 {
    grid-column-start: 7;
  }
}
@media (min-width: 1024px) {
  .col-lg-7 {
    grid-column-end: span 7;
  }
  .offset-lg-7 {
    grid-column-start: 8;
  }
}
@media (min-width: 1024px) {
  .col-lg-8 {
    grid-column-end: span 8;
  }
  .offset-lg-8 {
    grid-column-start: 9;
  }
}
@media (min-width: 1024px) {
  .col-lg-9 {
    grid-column-end: span 9;
  }
  .offset-lg-9 {
    grid-column-start: 10;
  }
}
@media (min-width: 1024px) {
  .col-lg-10 {
    grid-column-end: span 10;
  }
  .offset-lg-10 {
    grid-column-start: 11;
  }
}
@media (min-width: 1024px) {
  .col-lg-11 {
    grid-column-end: span 11;
  }
  .offset-lg-11 {
    grid-column-start: 12;
  }
}
@media (min-width: 1024px) {
  .col-lg-12 {
    grid-column-end: span 12;
  }
  .offset-lg-12 {
    grid-column-start: 13;
  }
}
@media (min-width: 1280px) {
  .offset-xl-0 {
    grid-column-start: 1;
  }
}
@media (min-width: 1280px) {
  .col-xl-1 {
    grid-column-end: span 1;
  }
  .offset-xl-1 {
    grid-column-start: 2;
  }
}
@media (min-width: 1280px) {
  .col-xl-2 {
    grid-column-end: span 2;
  }
  .offset-xl-2 {
    grid-column-start: 3;
  }
}
@media (min-width: 1280px) {
  .col-xl-3 {
    grid-column-end: span 3;
  }
  .offset-xl-3 {
    grid-column-start: 4;
  }
}
@media (min-width: 1280px) {
  .col-xl-4 {
    grid-column-end: span 4;
  }
  .offset-xl-4 {
    grid-column-start: 5;
  }
}
@media (min-width: 1280px) {
  .col-xl-5 {
    grid-column-end: span 5;
  }
  .offset-xl-5 {
    grid-column-start: 6;
  }
}
@media (min-width: 1280px) {
  .col-xl-6 {
    grid-column-end: span 6;
  }
  .offset-xl-6 {
    grid-column-start: 7;
  }
}
@media (min-width: 1280px) {
  .col-xl-7 {
    grid-column-end: span 7;
  }
  .offset-xl-7 {
    grid-column-start: 8;
  }
}
@media (min-width: 1280px) {
  .col-xl-8 {
    grid-column-end: span 8;
  }
  .offset-xl-8 {
    grid-column-start: 9;
  }
}
@media (min-width: 1280px) {
  .col-xl-9 {
    grid-column-end: span 9;
  }
  .offset-xl-9 {
    grid-column-start: 10;
  }
}
@media (min-width: 1280px) {
  .col-xl-10 {
    grid-column-end: span 10;
  }
  .offset-xl-10 {
    grid-column-start: 11;
  }
}
@media (min-width: 1280px) {
  .col-xl-11 {
    grid-column-end: span 11;
  }
  .offset-xl-11 {
    grid-column-start: 12;
  }
}
@media (min-width: 1280px) {
  .col-xl-12 {
    grid-column-end: span 12;
  }
  .offset-xl-12 {
    grid-column-start: 13;
  }
}
@media (min-width: 1440px) {
  .offset-xxl-0 {
    grid-column-start: 1;
  }
}
@media (min-width: 1440px) {
  .col-xxl-1 {
    grid-column-end: span 1;
  }
  .offset-xxl-1 {
    grid-column-start: 2;
  }
}
@media (min-width: 1440px) {
  .col-xxl-2 {
    grid-column-end: span 2;
  }
  .offset-xxl-2 {
    grid-column-start: 3;
  }
}
@media (min-width: 1440px) {
  .col-xxl-3 {
    grid-column-end: span 3;
  }
  .offset-xxl-3 {
    grid-column-start: 4;
  }
}
@media (min-width: 1440px) {
  .col-xxl-4 {
    grid-column-end: span 4;
  }
  .offset-xxl-4 {
    grid-column-start: 5;
  }
}
@media (min-width: 1440px) {
  .col-xxl-5 {
    grid-column-end: span 5;
  }
  .offset-xxl-5 {
    grid-column-start: 6;
  }
}
@media (min-width: 1440px) {
  .col-xxl-6 {
    grid-column-end: span 6;
  }
  .offset-xxl-6 {
    grid-column-start: 7;
  }
}
@media (min-width: 1440px) {
  .col-xxl-7 {
    grid-column-end: span 7;
  }
  .offset-xxl-7 {
    grid-column-start: 8;
  }
}
@media (min-width: 1440px) {
  .col-xxl-8 {
    grid-column-end: span 8;
  }
  .offset-xxl-8 {
    grid-column-start: 9;
  }
}
@media (min-width: 1440px) {
  .col-xxl-9 {
    grid-column-end: span 9;
  }
  .offset-xxl-9 {
    grid-column-start: 10;
  }
}
@media (min-width: 1440px) {
  .col-xxl-10 {
    grid-column-end: span 10;
  }
  .offset-xxl-10 {
    grid-column-start: 11;
  }
}
@media (min-width: 1440px) {
  .col-xxl-11 {
    grid-column-end: span 11;
  }
  .offset-xxl-11 {
    grid-column-start: 12;
  }
}
@media (min-width: 1440px) {
  .col-xxl-12 {
    grid-column-end: span 12;
  }
  .offset-xxl-12 {
    grid-column-start: 13;
  }
}
.convex {
  padding: 80px 0;
  background: #F1F3F6;
  overflow-x: clip;
  position: relative;
}
.convex::before, .convex::after {
  height: 200px;
  left: -200px;
  right: -200px;
  position: absolute;
  z-index: -1;
  background: #F1F3F6;
}
.convex--top::before {
  content: "";
  top: -40px;
  border-radius: 100% 100% 0 0;
}
.convex--bottom::after {
  content: "";
  bottom: -40px;
  border-radius: 0 0 100% 100%;
}

.concane {
  padding: 160px 0;
}

.button-xl {
  height: 81px;
  width: 372px;
  background: linear-gradient(146.7deg, #FF7337 12.07%, #FF5C16 86.23%);
  box-shadow: -10px -10px 18px #FFFFFF, 10px 10px 18px rgba(94, 93, 121, 0.1), inset 10px 10px 18px rgba(255, 255, 255, 0.2), inset -10px -10px 18px rgba(94, 93, 121, 0.1);
  border-radius: 100px;
  font-weight: 700;
  font-size: 14px;
  line-height: 150%;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  color: white;
  text-align: center;
}
@media (max-width: 767px) {
  .button-xl {
    height: 69px;
    width: 100%;
  }
}
.button-xl--pressed {
  background: #F1F3F6;
  /* hover 2 */
  box-shadow: -10px -10px 18px rgba(255, 255, 255, 0.5), 10px 10px 18px rgba(94, 93, 121, 0.05), inset -10px -10px 30px rgba(255, 255, 255, 0.75), inset 10px 10px 30px rgba(94, 93, 121, 0.1);
}

.button-link {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  border-radius: 100px;
  color: rgba(94, 93, 121, 0.8);
  font-weight: 400;
  font-size: 14px;
  line-height: 150%;
  letter-spacing: 0.1em;
  text-transform: uppercase;
}
.button-link__icon {
  width: 14px;
  height: 14px;
  display: block;
}

.textfield {
  height: 83px;
  display: flex;
  align-items: center;
  background: #F1F3F6;
  box-shadow: -10px -10px 18px rgba(255, 255, 255, 0.25), 10px 10px 18px rgba(94, 93, 121, 0.02), inset -10px -10px 18px rgba(255, 255, 255, 0.75), inset 10px 10px 18px rgba(94, 93, 121, 0.05);
  border-radius: 10px;
  text-transform: uppercase;
  padding-left: 40px;
  width: 100%;
  letter-spacing: 0.1em;
  border: none;
}
@media (max-width: 767px) {
  .textfield {
    height: 69px;
  }
}
.textfield::-moz-placeholder {
  color: rgba(94, 93, 121, 0.5);
}
.textfield::placeholder {
  color: rgba(94, 93, 121, 0.5);
}
.textfield:focus {
  outline: 1px solid #FF5C16;
  outline-offset: -1px;
}

.checkbox {
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 16.5px;
}
.checkbox__view {
  width: 20px;
  height: 20px;
  border-radius: 2px;
  background: #5E5D79;
  display: flex;
  align-items: center;
  justify-content: center;
}
.checkbox__view::after {
  width: 6px;
  height: 10px;
  border-right: 2px solid white;
  border-bottom: 2px solid white;
  transform: rotate(45deg) translate(-25%, -15%);
}
.checkbox__input:checked ~ .checkbox__view::after {
  content: "";
}
.checkbox__label-text {
  color: rgba(94, 93, 121, 0.8);
}

.menu__list {
  display: flex;
  -moz-column-gap: 25px;
       column-gap: 25px;
}
@media (max-width: 1439px) {
  .menu__list {
    justify-content: center;
  }
}
@media (max-width: 767px) {
  .menu__list {
    gap: 10px;
    flex-wrap: wrap;
  }
}
@media (max-width: 767px) {
  .menu__item {
    flex-basis: calc(50% - 5px);
    text-align: center;
  }
}

.menu__button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 50px;
  border-radius: 100px;
  color: rgba(94, 93, 121, 0.8);
  font-weight: 400;
  font-size: 12px;
  line-height: 150%;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  padding-left: 20px;
  padding-right: 20px;
}
@media (max-width: 767px) {
  .menu__button {
    width: 100%;
  }
}
@media (hover: hover) {
  .menu__button:hover {
    color: rgba(94, 93, 121, 0.5);
  }
}
.menu__button--pressed {
  box-shadow: -10px -10px 18px rgba(255, 255, 255, 0.25), 10px 10px 18px rgba(94, 93, 121, 0.02), inset -10px -10px 18px rgba(255, 255, 255, 0.5), inset 10px 10px 18px rgba(94, 93, 121, 0.02);
  color: #FF5C16;
  background: #F1F3F6;
}

.case__top {
  box-shadow: -10px -10px 20px #FFFFFF, 10px 10px 20px rgba(94, 93, 121, 0.25);
  margin-bottom: 20px;
  background: #D9D9D9;
  border-radius: 10px;
}
.case__image {
  border-radius: 10px;
  width: 100%;
}
.case__bottom {
  display: flex;
  align-items: center;
  gap: 30px;
}
.case__num {
  color: rgba(94, 93, 121, 0.4);
}
.stats-card {
  background: #E7E8ED;
  box-shadow: -10px -10px 18px rgba(255, 255, 255, 0.3), 10px 10px 18px rgba(94, 93, 121, 0.05);
  border-radius: 20px;
  padding: 40px;
  height: 100%;
}
.stats-card__heading {
  color: #FF5C16;
  margin-bottom: 15px;
  font-weight: 600;
}
.stats-card__letters {
  font-size: 40px;
}
.stats-card__percent {
  font-weight: 900;
  font-size: 50px;
}
.stats-card__text {
  color: rgba(94, 93, 121, 0.8);
}

.slides-counter {
  display: flex;
  align-items: center;
  gap: 8px;
}
.slides-counter__current {
  color: #5E5D79;
}
.slides-counter__hyphen {
  border: 1px solid rgba(94, 93, 121, 0.5);
  width: 20px;
  height: 0;
}
.slides-counter__total {
  color: rgba(94, 93, 121, 0.5);
}

.slider-controls {
  display: flex;
  gap: 30px;
}
.slider-controls__button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: 9999px;
  color: #5E5D79;
  box-shadow: -10px -10px 18px #FFFFFF, 10px 10px 18px rgba(94, 93, 121, 0.1);
}
.slider-controls__button:hover {
  color: #FF5C16;
}

.header-call {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  height: 50px;
  border-radius: 100px;
  color: rgba(94, 93, 121, 0.8);
  font-weight: 900;
  font-size: 12px;
  line-height: 150%;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  padding-left: 30px;
  padding-right: 30px;
  text-align: center;
  box-shadow: -10px -10px 18px #FFFFFF, 10px 10px 18px rgba(94, 93, 121, 0.1);
}
.header-call:hover {
  color: rgba(94, 93, 121, 0.5);
}
@media (max-width: 1279px) {
  .header-call {
    padding: unset;
    width: 46px;
    height: 46px;
    border-radius: 9999px;
  }
}
@media (max-width: 1279px) {
  .header-call__text {
    display: none;
  }
}

.main-header {
  height: 130px;
  background: #F1F3F6;
}
@media (max-width: 767px) {
  .main-header {
    height: 90px;
  }
}
.main-header__wrapper {
  display: flex;
  align-items: center;
  height: 100%;
}
.main-header__menu {
  margin-left: 80px;
}
@media (max-width: 1439px) {
  .main-header__menu {
    margin-left: auto;
  }
}
@media (max-width: 767px) {
  .main-header__menu {
    display: none;
  }
}
.main-header__list {
  -moz-column-gap: 6px;
       column-gap: 6px;
}
.main-header__link {
  padding-left: 20px;
  padding-right: 20px;
}
.main-header__actions {
  margin-left: auto;
}

.main-footer {
  padding-top: 40px;
  padding-bottom: 40px;
}
.main-footer__row {
  align-items: center;
}
@media (max-width: 1279px) {
  .main-footer__row {
    align-items: flex-start;
  }
}
@media (max-width: 767px) {
  .main-footer__row {
    row-gap: 30px;
    text-align: center;
  }
}
.main-footer__actions {
  display: flex;
  justify-content: space-between;
}
@media (max-width: 1279px) {
  .main-footer__actions {
    flex-direction: column;
    row-gap: 15px;
    align-items: flex-start;
  }
}
@media (max-width: 767px) {
  .main-footer__actions {
    row-gap: 20px;
    align-items: center;
  }
}
.main-footer__button {
  padding: unset;
  height: unset;
}

.s-title {
  background: #F1F3F6;
}
@media (max-width: 767px) {
  .s-title {
    padding-top: 40px;
  }
}
@media (max-width: 767px) {
  .s-title__container {
    position: relative;
  }
}
.s-title__content {
  grid-template-rows: repeat(2, 1fr);
  margin-bottom: 60px;
}
@media (max-width: 1279px) {
  .s-title__content {
    grid-template-rows: repeat(2, auto);
  }
}
@media (max-width: 767px) {
  .s-title__content {
    margin-bottom: 30px;
  }
}
.s-title__slider {
  grid-area: 1/1/3/13;
}
@media (max-width: 767px) {
  .s-title__slider {
    grid-area: 1/1/2/13;
  }
}
.s-title__controls {
  grid-area: 2/2/3/5;
  display: flex;
  gap: 30px;
  align-items: center;
  align-self: flex-end;
  position: relative;
  z-index: 2;
  margin-bottom: 12px;
}
@media (max-width: 1279px) {
  .s-title__controls {
    grid-area: 2/9/3/13;
    align-self: auto;
    margin-bottom: unset;
  }
}
@media (max-width: 767px) {
  .s-title__controls {
    position: absolute;
    left: 0;
    right: 0;
    bottom: -30px;
    justify-content: space-between;
    transform: translateY(100%);
    align-self: unset;
  }
}
.s-title__actions {
  justify-items: center;
}
@media (max-width: 767px) {
  .s-title__actions {
    justify-items: stretch;
  }
}

.offer {
  grid-template-rows: repeat(2, 1fr);
  align-items: center;
}
@media (max-width: 1279px) {
  .offer {
    grid-template-rows: repeat(2, auto);
    row-gap: 30px;
  }
}
.offer__title {
  grid-area: 1/1/3/13;
  flex-wrap: wrap;
  display: flex;
}
@media (max-width: 1279px) {
  .offer__title {
    grid-area: 1/1/2/13;
  }
}
.offer__chunk-1 {
  width: 100%;
}
.offer__chunk-2 {
  margin-left: auto;
}
@media (max-width: 767px) {
  .offer__chunk-2 {
    margin-left: unset;
  }
}
.offer__text {
  grid-area: 1/8/1/11;
}
@media (max-width: 1279px) {
  .offer__text {
    grid-area: 2/1/3/8;
  }
}
@media (max-width: 767px) {
  .offer__text {
    grid-area: 2/1/3/10;
  }
}

.s-cases__top {
  margin-bottom: 50px;
  align-items: center;
}
@media (max-width: 1279px) {
  .s-cases__top {
    row-gap: 40px;
    align-items: stretch;
    margin-bottom: 20px;
  }
}
@media (max-width: 767px) {
  .s-cases__top {
    row-gap: unset;
    margin-bottom: 15px;
  }
}
@media (max-width: 1279px) {
  .s-cases__heading {
    text-align: center;
  }
}
@media (max-width: 767px) {
  .s-cases__heading {
    margin-bottom: 40px;
  }
}
.s-cases__content {
  padding-top: 80px;
  position: relative;
}
@media (max-width: 1439px) {
  .s-cases__content {
    row-gap: 30px;
    padding-top: 40px;
  }
}
.s-cases__menu {
  margin-left: -20px;
}
@media (max-width: 1279px) {
  .s-cases__menu {
    padding-bottom: 20px;
    border-bottom: 1px solid rgba(94, 93, 121, 0.2);
  }
}
@media (max-width: 767px) {
  .s-cases__menu {
    padding-bottom: 15px;
  }
}
@media (max-width: 1279px) {
  .s-cases__menu {
    margin-left: unset;
  }
}
@media (max-width: 767px) {
  .s-cases__chunk-1 {
    margin-bottom: 10px;
  }
}
.s-cases__controls {
  display: flex;
  align-items: center;
  justify-content: space-between;
  grid-area: 1/1/3/13;
}
@media (max-width: 1439px) {
  .s-cases__controls {
    grid-area: 1/1/1/13;
  }
}
.s-cases__slider {
  grid-area: 1/1/3/13;
}
@media (max-width: 1439px) {
  .s-cases__slider {
    grid-area: 2/1/3/13;
  }
}
.s-cases__button-prev {
  margin-left: -80px;
}
@media (max-width: 1439px) {
  .s-cases__button-prev {
    margin-left: unset;
  }
}
.s-cases__button-next {
  margin-right: -80px;
}
@media (max-width: 1439px) {
  .s-cases__button-next {
    margin-right: unset;
  }
}
.s-cases__counter {
  position: absolute;
  top: 0;
}
@media (max-width: 1439px) {
  .s-cases__counter {
    position: static;
  }
}

.s-service__top {
  margin-bottom: 80px;
  align-items: center;
}
@media (max-width: 1279px) {
  .s-service__top {
    row-gap: 40px;
    margin-bottom: 60px;
  }
}
@media (max-width: 767px) {
  .s-service__top {
    margin-bottom: 50px;
  }
}
.s-service__heading {
  text-align: center;
}
.s-service__menu {
  margin-left: -20px;
}
@media (max-width: 1279px) {
  .s-service__menu {
    padding-bottom: 20px;
    border-bottom: 1px solid rgba(94, 93, 121, 0.2);
  }
}
@media (max-width: 767px) {
  .s-service__menu {
    padding-bottom: 15px;
  }
}
@media (max-width: 1279px) {
  .s-service__menu {
    margin-left: unset;
  }
}
.s-service__options-wrap {
  display: flex;
  gap: 80px;
}
@media (max-width: 767px) {
  .s-service__options-wrap {
    flex-direction: column;
  }
}
.s-service__subheader {
  margin-bottom: 40px;
  font-weight: 700;
  font-size: 14px;
  line-height: 150%;
  letter-spacing: 0.1em;
  color: #5E5D79;
  text-transform: uppercase;
}
.s-service__subheader--nowrap {
  width: -moz-max-content;
  width: max-content;
}
.s-service__list {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  row-gap: 14px;
  -moz-column-gap: 40px;
       column-gap: 40px;
  max-height: 150px;
}
@media (max-width: 767px) {
  .s-service__list {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    max-height: 82px;
  }
}
.s-service__option {
  font-weight: 400;
  font-size: 12px;
  line-height: 150%;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  color: #5E5D79;
}

.s-stats__wrapper {
  row-gap: 40px;
}
@media (max-width: 1279px) {
  .s-stats__wrapper {
    row-gap: 30px;
  }
}
@media (max-width: 767px) {
  .s-stats__wrapper {
    row-gap: 20px;
  }
}

.s-contacts {
  padding-bottom: 120px;
}
.s-contacts__top {
  margin-bottom: 60px;
  text-align: center;
  row-gap: 30px;
}
@media (max-width: 767px) {
  .s-contacts__top {
    margin-bottom: 50px;
  }
}
.s-contacts__form {
  row-gap: 30px;
}
@media (max-width: 767px) {
  .s-contacts__form {
    row-gap: 20px;
  }
}
.s-contacts__actions {
  justify-self: center;
}
@media (max-width: 767px) {
  .s-contacts__actions {
    justify-self: stretch;
  }
}
.s-contacts__policy {
  justify-content: center;
}
@media (max-width: 767px) {
  .s-contacts__policy {
    justify-content: start;
    align-items: start;
  }
}
@media (max-width: 767px) {
  .s-contacts__policy-text {
    width: 225px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
